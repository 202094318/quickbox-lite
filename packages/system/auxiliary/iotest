#!/bin/bash
#
# [QuickBox Lite IO Tester]
#
# GitHub:   https://github.com/amefs/quickbox-lite
# Author:   Amefs
# Current version:  v1.1.0
# URL:
# Original Repo:    https://teddysun.com/444.html
# Credits to:       QuickBox.io
#
#   Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
#################################################################################
# CORE VARIABLE
#################################################################################
DISTRO=$(lsb_release -is)
RELEASE=$(lsb_release -rs)
CODENAME=$(lsb_release -cs)
SETNAME=$(lsb_release -rc)
# Server IP Address
SERVERIP=$(ip addr show |grep 'inet '|grep -v 127.0.0.1 |awk '{print $2}'| cut -d/ -f1 | head -n 1);
EXTRACMD=${@:1}

################################################################################
# HELP FUNCTIONS
################################################################################
_norm=$(tput sgr0)
_red=$(tput setaf 1)
_green=$(tput setaf 2)
_tan=$(tput setaf 3)
_cyan=$(tput setaf 6)
OUTTO=/srv/dashboard/db/output.log

function _excute() {
    ($1 >> "${OUTTO}" 2>&1;)
}
function _print() {
    printf "${_norm}%s${_norm}\n" "$@"
}
function _info() {
    printf "${_cyan}➜ %s${_norm}\n" "$@"
}
function _success() {
    printf "${_green}✓ %s${_norm}\n" "$@"
}
function _warning() {
    printf "${_tan}⚠ %s${_norm}\n" "$@"
}
function _error() {
    printf "${_red}✗ %s${_norm}\n" "$@"
}

################################################################################
# MAIN FUNCTIONS
################################################################################
function _iotest() {
    if [[ -f /install/.lang_zh.lock ]]; then
        python /usr/local/bin/quickbox/system/auxiliary/fio-bench_zh-cn.py ${EXTRACMD}
    else
        python /usr/local/bin/quickbox/system/auxiliary/fio-bench.py ${EXTRACMD}
    fi
}

function _installSystemUpdates() {
    _info "Checking and performing updates to system... ";
    DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >/dev/null 2>&1
    DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >/dev/null 2>&1
    ## auto solve lock
    if [ "$?" -eq 2 ]; then
        _warning "dpkg database is locked."
        _info "fixing dpkg lock..."
        rm -f /var/lib/dpkg/updates/0*
        locks=$(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*)
        if [[ ${locks} == $(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*) ]]; then
            for l in ${locks}; do
                rm -rf ${l}
            done
            _excute "dpkg --configure -a"
            DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >/dev/null 2>&1
            DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >/dev/null 2>&1
        fi
        apt-get check >/dev/null 2>&1
        if [ "$?" -ne 0 ]; then
            _excute "apt-get install -f"
            apt-get check >/dev/null 2>&1
            if [ "$?" -ne 0 ]; then
                _error "apt-get check failed, you may have broken packages."
                exit 1
            fi
        fi
    fi
    _success "System updated."
}

function _installDepends() {
    _info "Installing ${APP_TITLE} dependencies..."
    local DEPLIST="${APP_BASEDEPS}"
    for depend in $DEPLIST; do
        _info "Installing ${depend}... "
        _excute "apt-get -y --allow-unauthenticated -f install ${depend}" || { _error "Could not install ${depend}." && dependError=1; }
    done
    if [[ $dependError != "1" ]]; then
        _success "${APP_TITLE} dependencies installed."
    else
        _error "${APP_TITLE} dependencies failed to install."
        exit 1
    fi
}

function _checkdep() {
    if ( [ ! -f /usr/bin/fio ] || ! $(dpkg -l | grep -q 'prettytable')); then
        _installSystemUpdates
        APP_BASEDEPS="fio python-prettytable"
        _installDepends
    fi
}

#################################################################################
# MAIN PROCESS
#################################################################################
_checkdep
_iotest
