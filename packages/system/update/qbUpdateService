function _updateservice() {
	# Update nginx service
	if (! grep -c 'location /ws' < /etc/nginx/apps/dashboard.conf > /dev/null); then
		_info "Updating Nginx Configuration..."
		\cp -f ${local_setup_template}nginx/dashboard.conf.template /etc/nginx/apps/dashboard.conf
	fi
	if [[ ! -f /install/.quickbox-ws.lock ]]; then
		# Install nodejs for websocks method
		if [[ ! $(which npm) ]] || [[ $(node --version) =~ "v6" ]]; then
			_info "Installing Node.js..."
			cd /tmp || exit 1
			_excute "curl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh"
			_excute "sudo bash nodesource_setup.sh"
			_excute "apt-get install -y nodejs"
			if [[ -f /tmp/nodesource_setup.sh ]]; then
				rm nodesource_setup.sh
			fi
		fi
		# install service
		_info "Installing Dashboard service..."
		cd ${local_setup_dashboard}ws ||exit 1
		_excute "npm install --production"
		\cp -f ${local_setup_template}systemd/quickbox-ws.service.template /etc/systemd/system/quickbox-ws.service
		_excute "systemctl daemon-reload"
		_excute "systemctl enable quickbox-ws.service"
		touch /install/.quickbox-ws.lock
		_success "QuickBox service updated"
	else
		_info "Reconfig Dashboard service..."
		cd ${local_setup_dashboard}ws ||exit 1
		_excute "npm install --production"
		_success "Dashboard service updated"
	fi
}

function _startservice() {
	# always reload to ensure service up to date
	_excute "systemctl restart quickbox-ws.service"
}